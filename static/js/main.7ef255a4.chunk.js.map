{"version":3,"sources":["index.js","../node_modules/express/lib sync","database.js","routes/lessons.routes.js","models/lesson.js"],"names":["express","require","morgan","path","app","mongoose","set","process","PORT","use","json","static","join","__dirname","listen","get","console","log","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","connect","useNewUrlParser","then","db","catch","err","router","Router","Lesson","res","a","find","lessons","findById","params","lesson","post","body","title","content","newLesson","save","put","findByIdAndUpdate","status","LessonSchema","Schema","type","String","required","model"],"mappings":"gHAAA,gBAAMA,EAAUC,EAAQ,IAClBC,EAASD,EAAQ,KACjBE,EAAOF,EAAQ,IACfG,EAAMJ,IAEOC,EAAQ,KAApBI,SAEPD,EAAIE,IAAI,OAAQC,iJAAYC,MAAQ,KAEpCJ,EAAIK,IAAIP,EAAO,QACfE,EAAIK,IAAIT,EAAQU,QAEhBN,EAAIK,IAAI,eAAgBR,EAAQ,MAEhCG,EAAIK,IAAIT,EAAQW,OAAOR,EAAKS,KAAKC,EAAW,YAG5CT,EAAIU,OAAOV,EAAIW,IAAI,SAAS,WACxBC,QAAQC,IAAI,iBAAkBb,EAAIW,IAAI,c,sIClB1C,SAASG,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,K,oQCRzB,IAAMtB,EAAWJ,EAAQ,KAEzBI,EAASuB,QAAQ,+FAAgG,CAAEC,iBAAiB,IACnIC,MAAK,SAAAC,GAAE,OAAIf,QAAQC,IAAI,mBACvBe,OAAM,SAAAC,GAAG,OAAIjB,QAAQC,IAAIgB,MAG1BR,EAAOC,QAAUrB,G,iFCNX6B,EADUjC,EAAQ,IACDkC,SAEjBC,EAASnC,EAAQ,KAEvBiC,EAAOnB,IAAI,IAAX,uCAAgB,WAAOI,EAAKkB,GAAZ,eAAAC,EAAA,sEACUF,EAAOG,OADjB,OACNC,EADM,OAEZxB,QAAQC,IAAIuB,GACZH,EAAI3B,KAAK8B,GAHG,2CAAhB,yDAMAN,EAAOnB,IAAI,OAAX,uCAAmB,WAAOI,EAAKkB,GAAZ,eAAAC,EAAA,sEACMF,EAAOK,SAAStB,EAAIuB,OAAOf,IADjC,OACTgB,EADS,OAEfN,EAAI3B,KAAKiC,GAFM,2CAAnB,yDAKAT,EAAOU,KAAK,IAAZ,uCAAiB,WAAOzB,EAAKkB,GAAZ,qBAAAC,EAAA,+DACcnB,EAAI0B,KAAvBC,EADK,EACLA,MAAOC,EADF,EACEA,QACTC,EAAY,IAAIZ,EAAQ,CAAEU,QAAOC,YAF1B,SAGPC,EAAUC,OAHH,OAIbZ,EAAI3B,KAAK,gBAJI,2CAAjB,yDAOAwB,EAAOgB,IAAI,OAAX,uCAAmB,WAAO/B,EAAKkB,GAAZ,qBAAAC,EAAA,+DACYnB,EAAI0B,KAAvBC,EADO,EACPA,MAAOC,EADA,EACAA,QACTC,EAAW,CAAEF,QAAOC,WAFX,SAGTX,EAAOe,kBAAkBhC,EAAIuB,OAAOf,GAAIqB,GAH/B,OAIfX,EAAI3B,KAAK,CAAC0C,OAAO,mBAJF,2CAAnB,yDAOA3B,EAAOC,QAAUQ,G,0CC9BjB,IAAM7B,EAAWJ,EAAQ,KAGnBoD,EAAe,IAAIC,EAFNjD,EAAXiD,QAEyB,CAC7BR,MAAO,CAACS,KAAMC,OAAQC,UAAU,GAChCV,QAAS,CAACQ,KAAMC,OAAQC,UAAS,KAGrChC,EAAOC,QAAUrB,EAASqD,MAAM,SAAUL,K","file":"static/js/main.7ef255a4.chunk.js","sourcesContent":["const express = require('express')\r\nconst morgan = require('morgan');\r\nconst path = require('path');\r\nconst app = express();\r\n\r\nconst {mongoose} = require('./database')\r\n\r\napp.set('port', process.env.PORT || 3000)\r\n\r\napp.use(morgan('dev'));\r\napp.use(express.json());\r\n\r\napp.use('/api/lessons', require('./routes/lessons.routes'));\r\n\r\napp.use(express.static(path.join(__dirname, 'public')))\r\n\r\n\r\napp.listen(app.get('port'), () => {\r\n    console.log('Server on port', app.get('port'));\r\n})","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 233;","const mongoose = require('mongoose');\r\n\r\nmongoose.connect('mongodb+srv://admin:12344321@test.sylml.mongodb.net/lps_learning?retryWrites=true&w=majority', { useNewUrlParser: true })\r\n.then(db => console.log('DB connected'))\r\n.catch(err => console.log(err));\r\n\r\n\r\nmodule.exports = mongoose;","const express = require('express');\r\nconst router = express.Router();\r\n\r\nconst Lesson = require('../models/lesson');\r\n\r\nrouter.get('/', async (req, res) => {\r\n    const lessons = await Lesson.find();\r\n    console.log(lessons);\r\n    res.json(lessons);\r\n});\r\n\r\nrouter.get('/:id', async (req, res) => {\r\n    const lesson = await Lesson.findById(req.params.id);\r\n    res.json(lesson);\r\n});\r\n\r\nrouter.post('/', async (req, res) => {\r\n    const { title, content } = req.body;\r\n    const newLesson = new Lesson ({ title, content })\r\n    await newLesson.save();\r\n    res.json(\"Lesson saved\");\r\n});\r\n\r\nrouter.put('/:id', async (req, res) => {\r\n    const { title, content } = req.body;\r\n    const newLesson ={ title, content };\r\n    await Lesson.findByIdAndUpdate(req.params.id, newLesson); \r\n    res.json({status:\"Lesson updated\"});\r\n});\r\n\r\nmodule.exports = router;","const mongoose = require('mongoose');\r\nconst { Schema } = mongoose;\r\n\r\nconst LessonSchema = new Schema ({\r\n    title: {type: String, required: true},\r\n    content: {type: String, required:true}\r\n});\r\n\r\nmodule.exports = mongoose.model('Lesson', LessonSchema);"],"sourceRoot":""}